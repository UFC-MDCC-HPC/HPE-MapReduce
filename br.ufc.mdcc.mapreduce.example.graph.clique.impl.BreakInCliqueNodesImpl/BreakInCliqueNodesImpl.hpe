<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000f940673bd7effadafad052e5ba4c6a5484aa95355c36c241fe8fc2e84728437152dd7849e71e452e105976596702720f608a4b622586964875bc0e20930cbda613f7ca050dc2e050f9a71391f6a92e546ca2623c268a810275706238ed29f1583521d107f6b6b511d4fbfd87f000ed5460732930d19a3e2a8f2684138b6a3ab0" isAbstract="false" kind="Computation" name="BreakInCliqueNodesImpl" packagePath="br.ufc.mdcc.mapreduce.example.graph.clique.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000171119ab23be394e7491fedb89e2e2496f7f076f6edfe165a0124a9a41081165c208ed786922882cfed1ffde1a0d9d55ab0123e8d10f7b4113b3228a53b88594a71a79d9d006f5a7f56ec15c0a0b94c48fbe9b98dea2828c07fce6c148359ca9ca1dbb491ea0d02ce34a3058434d0cb5ba2b32d001b3fac2c915fdbb5f0d158f" localRef="base" location="br.ufc.mdcc.mapreduce.example.graph.clique.BreakInCliqueNodes/BreakInCliqueNodes.hpe" name="BreakInCliqueNodes" package="br.ufc.mdcc.mapreduce.example.graph.clique" version="1.0.0.0">
        <visualDescription h="60" w="100" x="198" y="334">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000e5873a44b23e0e36b62bd4462cf4f01fc4b03ce7b0922141e389cf2291aacd898d054a1e2147ce8c1c563b7a410cefef0e8d5b9b941643a09a5bdd0bd24eeeec082e8bd8fdf285fa51fe1c78d5351d970ba67e30fceb6575df115ce2b235b62d8fb560a1546371508d8a1aa133a213323d80aacd148883ae2fa6225f4d678cec" localRef="input_data" location="br.ufc.mdcc.common.String/String.hpe" multiple="false" name="String" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="100" x="498" y="92">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="data">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a1d2d4f2ea9f962479f5322ab4d1b509fc8c95e67ad710c6bb2bc57522c8c96bb02c9f6dd000e20cf3098ef39cfffcb5af08f7fe86f5a1e1d0172e5578904f3160047cc21cbc9660df9c536444ce9e025fc3ca5bea6941da4aa0c6f38995d31933743052835857938e9f4726c55a065b54c9cd331a30361384b29cc34db7e285" localRef="output_data" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="false" name="Iterator" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="169" x="393" y="397">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="item_type" varName="X###1958932049"/>
          <unitBounds parallel="false" uRef="iterator">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds parallel="false" uRef="split_function">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="IBreakInCliqueNodesImpl" nArgs="0">
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.String;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.mapreduce.example.graph.clique.CliqueNode;&#xA;using br.ufc.mdcc.mapreduce.example.graph.clique.BreakInCliqueNodes;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.example.graph.clique.impl.BreakInCliqueNodesImpl { &#xA;&#xA;&#x9;public abstract class BaseIBreakInCliqueNodesImpl: Computation, BaseIBreakInCliqueNodes{&#xA;&#xA;&#x9;&#x9;private IString input_data = null;&#xA;&#x9;&#x9;public IString Input_data {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_data == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_data = (IString) Services.getPort(&quot;input_data&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_data;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;IInteger, ICliqueNode>> output_data = null;&#xA;&#x9;&#x9;public IIterator&lt;IKVPair&lt;IInteger, ICliqueNode>> Output_data {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_data == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_data = (IIterator&lt;IKVPair&lt;IInteger, ICliqueNode>>) Services.getPort(&quot;output_data&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_data;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="BaseIBreakInCliqueNodesImpl.cs" srcType="base" uri="br.ufc.mdcc.mapreduce.example.graph.clique.impl.BreakInCliqueNodesImpl/bin/1.0.0.0/BaseIBreakInCliqueNodesImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Iterator/bin/1.0.0.0/IIterator.dll</dependency>
          <dependency>br.ufc.mdcc.common.KVPair/bin/1.0.0.0/IKVPair.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.graph.clique.CliqueNode/bin/1.0.0.0/ICliqueNode.dll</dependency>
          <dependency>br.ufc.mdcc.common.Integer/bin/1.0.0.0/IInteger.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.graph.clique.BreakInCliqueNodes/bin/1.0.0.0/BaseIBreakInCliqueNodes.dll</dependency>
        </file>
        <file contents="using System;&#xA;using System.Collections.Generic;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.mapreduce.example.graph.clique.BreakInCliqueNodes;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.String;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.mapreduce.example.graph.clique.CliqueNode;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.example.graph.clique.impl.BreakInCliqueNodesImpl { &#xA;&#xA;&#x9;public class IBreakInCliqueNodesImpl : BaseIBreakInCliqueNodesImpl, IBreakInCliqueNodes{&#xA;&#x9;&#x9;public IBreakInCliqueNodesImpl() { } &#xA;&#xA;&#x9;&#x9;public override void main() { &#xA;&#x9;&#x9;&#x9;createCliqueNodes(((IStringInstance) Input_data.Instance).Value);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private void createCliqueNodes(string fileContent){&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;IInteger, ICliqueNode>> output = (IIteratorInstance&lt;IKVPair&lt;IInteger, ICliqueNode>>) Output_data.Instance;&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int, IDictionary&lt;int,ICliqueNodeInstance>> dictionary = new Dictionary&lt;int, IDictionary&lt;int,ICliqueNodeInstance>>();&#xA;&#xA;&#x9;&#x9;&#x9;IList&lt;IKVPairInstance&lt;IInteger,ICliqueNode>> PAGENODES = new List&lt;IKVPairInstance&lt;IInteger,ICliqueNode>>();&#xA;&#xA;&#x9;&#x9;&#x9;string[] lines = fileContent.Split(new char[] {System.Environment.NewLine[0]});&#xA;&#x9;&#x9;&#x9;foreach (string line in lines){&#xA;&#x9;&#x9;&#x9;&#x9;if (!line.Trim().Equals (&quot;&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;ICliqueNodeInstance V, W, temp = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IDictionary&lt;int,ICliqueNodeInstance> referenceV, referenceW = null;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;int[] KEY = new int[2];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;string[] vwID = line.Split (' ');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (int k = 0; k &lt; 2; k++) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;KEY [k] = int.Parse (vwID [k]);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!dictionary.TryGetValue (KEY [0], out referenceV)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IInteger,ICliqueNode> kvpair = (IKVPairInstance&lt;IInteger,ICliqueNode>) Output_data.createItem() ;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;V = (ICliqueNodeInstance)kvpair.Value;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;V.IdInstance = KEY [0];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IIntegerInstance)kvpair.Key).Value = V.IdInstance;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;referenceV = new Dictionary&lt;int,ICliqueNodeInstance> ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dictionary [KEY [0]] = referenceV;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;referenceV [KEY [0]] = V;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;PAGENODES.Add (kvpair);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!dictionary.TryGetValue (KEY [1], out referenceW)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IInteger,ICliqueNode> kvpair = (IKVPairInstance&lt;IInteger,ICliqueNode>) Output_data.createItem() ;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;W = (ICliqueNodeInstance)kvpair.Value;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;W.IdInstance = KEY [1];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IIntegerInstance)kvpair.Key).Value = W.IdInstance;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;referenceW = new Dictionary&lt;int,ICliqueNodeInstance> ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dictionary [KEY [1]] = referenceW;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;referenceW [KEY [1]] = W;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;PAGENODES.Add (kvpair);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!referenceV.TryGetValue (KEY [1], out temp)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;V = referenceV [KEY [0]];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;W = referenceW [KEY [1]];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;referenceV [KEY [1]] = W;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;V.NeighborsInstance.Add (W.IdInstance);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;IEnumerator&lt;IKVPairInstance&lt;IInteger,ICliqueNode>> iterator = PAGENODES.GetEnumerator();&#xA;&#x9;&#x9;&#x9;while (iterator.MoveNext()) {&#xA;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IInteger,ICliqueNode> kvpair = iterator.Current;&#xA;&#x9;&#x9;&#x9;&#x9;output.put (kvpair);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;output.finish();&#xA;&#xA;&#x9;&#x9;&#x9;//Debug Start&#xA;&#x9;&#x9;&#x9;string[] data_tempo = System.IO.File.ReadAllText(&quot;/home/cenez/data.txt&quot;).Split(' ');&#xA;&#x9;&#x9;&#x9;iterator = PAGENODES.GetEnumerator();&#xA;&#x9;&#x9;&#x9;while (iterator.MoveNext()) {&#xA;&#x9;&#x9;&#x9;&#x9;string saida = &quot;&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IInteger,ICliqueNode> kvpair = iterator.Current;&#xA;&#x9;&#x9;&#x9;&#x9;IIntegerInstance I = ((IIntegerInstance) kvpair.Key);&#xA;&#x9;&#x9;&#x9;&#x9;ICliqueNodeInstance N = ((ICliqueNodeInstance) kvpair.Value);&#xA;&#x9;&#x9;&#x9;&#x9;saida = &quot;TaskRank=&quot;+this.Rank+&quot; &lt;&quot; + I.Value + &quot;, [&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;IEnumerator&lt;int> neighbor = N.NeighborsInstance.GetEnumerator ();&#xA;&#x9;&#x9;&#x9;&#x9;while (neighbor.MoveNext ()) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;saida = saida + neighbor.Current + &quot; &quot;;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;saida = saida + &quot;]>&quot;;&#xA;&#x9;&#x9;&#x9;&#x9;using (System.IO.StreamWriter file = new System.IO.StreamWriter(@&quot;/home/cenez/logOutCliqueBreakInCliqueNodes&quot;+data_tempo[0], true)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;file.WriteLine(saida);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;//Debug End&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IBreakInCliqueNodesImpl.cs" srcType="user" uri="br.ufc.mdcc.mapreduce.example.graph.clique.impl.BreakInCliqueNodesImpl/bin/1.0.0.0/IBreakInCliqueNodesImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.mapreduce.example.graph.clique.impl.BreakInCliqueNodesImpl/bin/1.0.0.0/BaseIBreakInCliqueNodesImpl.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.graph.clique.BreakInCliqueNodes/bin/1.0.0.0/IBreakInCliqueNodes.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="272" x="89" y="125">
        <color b="0" g="255" r="255"/>
      </visualDescription>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit iRef="IBreakInCliqueNodesImpl" multiple="false" private="false" replica="0" uRef="split_function" visibleInterface="true">
      <super cRef="base" uRef="split_function"/>
      <visualDescription h="40" w="151" x="145" y="221"/>
    </unit>
  </componentInfo>
</component:component>