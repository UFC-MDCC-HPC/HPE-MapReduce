<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000d1dd74930bb5731c1377deb7c0cbbbbd0302777a2776500a5a2218d67d081ad2b48e29984805d860c781007b1a1f56e8e3cfb12857d2524d7153643b2efbc5580c661463216a5d0d5eeb38d1a3811001414dcbe25dd96b5aca152731930593c2fa977b4540e29ee240ac08aa0990e339de906f6c5a2ba893e8a68153171a37a5" isAbstract="false" kind="Computation" name="BreakInPageNodesImpl" packagePath="br.ufc.mdcc.mapreduce.example.graph.pagerank.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000bf614e390c9c4598e6e1a6f4033d613bf81d36f0356f378d6c7a1c694b7789a151b3aedd19a642fabf5adaf52528aa8b72f2b5d917bf64b96a5b0c8bf6408dc882a84675788ec7a54ae7c389ed710b7273ae45e6a209a0b49e768be92caaf0bf600724fe55fa70cf7966950e45ed3074a6743cb14d7ce28beec91fe72855db92" localRef="base" location="br.ufc.mdcc.mapreduce.example.graph.pagerank.BreakInPageNodes/BreakInPageNodes.hpe" name="BreakInPageNodes" package="br.ufc.mdcc.mapreduce.example.graph.pagerank" version="1.0.0.0">
        <visualDescription h="60" w="100" x="336" y="371">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000e5873a44b23e0e36b62bd4462cf4f01fc4b03ce7b0922141e389cf2291aacd898d054a1e2147ce8c1c563b7a410cefef0e8d5b9b941643a09a5bdd0bd24eeeec082e8bd8fdf285fa51fe1c78d5351d970ba67e30fceb6575df115ce2b235b62d8fb560a1546371508d8a1aa133a213323d80aacd148883ae2fa6225f4d678cec" localRef="input_data" location="br.ufc.mdcc.common.String/String.hpe" multiple="false" name="String" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="100" x="98" y="142">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="data">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a1d2d4f2ea9f962479f5322ab4d1b509fc8c95e67ad710c6bb2bc57522c8c96bb02c9f6dd000e20cf3098ef39cfffcb5af08f7fe86f5a1e1d0172e5578904f3160047cc21cbc9660df9c536444ce9e025fc3ca5bea6941da4aa0c6f38995d31933743052835857938e9f4726c55a065b54c9cd331a30361384b29cc34db7e285" localRef="output_data" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="false" name="Iterator" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="169" x="341" y="468">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="item_type" varName="X###32129750"/>
          <unitBounds parallel="false" uRef="iterator">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds parallel="false" uRef="split_function">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="IBreakInPageNodesImpl" nArgs="0">
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.String;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.mapreduce.example.graph.pagerank.PageNode;&#xA;using br.ufc.mdcc.mapreduce.example.graph.pagerank.BreakInPageNodes;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.example.graph.pagerank.impl.BreakInPageNodesImpl { &#xA;   &#xA;&#x9;public abstract class BaseIBreakInPageNodesImpl: Computation, BaseIBreakInPageNodes{&#xA;&#x9;&#x9;private IString input_data = null;&#xA;&#x9;&#x9;public IString Input_data {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_data == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_data = (IString) Services.getPort(&quot;input_data&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_data;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;IInteger, IPageNode>> output_data = null;&#xA;&#x9;&#x9;public IIterator&lt;IKVPair&lt;IInteger, IPageNode>> Output_data {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_data == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_data = (IIterator&lt;IKVPair&lt;IInteger, IPageNode>>) Services.getPort(&quot;output_data&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_data;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="BaseIBreakInPageNodesImpl.cs" srcType="base" uri="br.ufc.mdcc.mapreduce.example.graph.pagerank.impl.BreakInPageNodesImpl/bin/1.0.0.0/BaseIBreakInPageNodesImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Iterator/bin/1.0.0.0/IIterator.dll</dependency>
          <dependency>br.ufc.mdcc.common.KVPair/bin/1.0.0.0/IKVPair.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.graph.pagerank.PageNode/bin/1.0.0.0/IPageNode.dll</dependency>
          <dependency>br.ufc.mdcc.common.Integer/bin/1.0.0.0/IInteger.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.graph.pagerank.BreakInPageNodes/bin/1.0.0.0/BaseIBreakInPageNodes.dll</dependency>
        </file>
        <file contents="using System;&#xA;using System.Collections.Generic;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.String;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.mapreduce.example.graph.pagerank.PageNode;&#xA;using br.ufc.mdcc.mapreduce.example.graph.pagerank.BreakInPageNodes;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.example.graph.pagerank.impl.BreakInPageNodesImpl { &#xA;&#x9;public class IBreakInPageNodesImpl : BaseIBreakInPageNodesImpl, IBreakInPageNodes{&#xA;&#x9;   &#xA;&#x9;&#x9;public IBreakInPageNodesImpl() { } &#xA;&#xA;&#x9;&#x9;public override void main() { &#xA;&#x9;&#x9;&#x9;createPageNodes(((IStringInstance) Input_data.Instance).Value);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private void createPageNodes(string fileContent){&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;IInteger, IPageNode>> output = (IIteratorInstance&lt;IKVPair&lt;IInteger, IPageNode>>) Output_data.Instance;&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int, IDictionary&lt;int,IPageNodeInstance>> dictionary = new Dictionary&lt;int, IDictionary&lt;int,IPageNodeInstance>>();&#xA;&#xA;&#x9;&#x9;&#x9;IList&lt;IKVPairInstance&lt;IInteger,IPageNode>> PAGENODES = new List&lt;IKVPairInstance&lt;IInteger,IPageNode>>();&#xA;&#xA;&#x9;&#x9;&#x9;string[] lines = fileContent.Split(new char[] {System.Environment.NewLine[0]});&#xA;&#x9;&#x9;&#x9;foreach (string line in lines){&#xA;&#x9;&#x9;&#x9;&#x9;if (!line.Trim().Equals (&quot;&quot;)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IPageNodeInstance V, W, temp = null;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IDictionary&lt;int,IPageNodeInstance> referenceV, referenceW = null;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;int[] KEY = new int[2];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;string[] vwID = line.Split (' ');&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;for (int k = 0; k &lt; 2; k++) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;KEY [k] = int.Parse (vwID [k]);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!dictionary.TryGetValue (KEY [0], out referenceV)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IInteger,IPageNode> kvpair = (IKVPairInstance&lt;IInteger,IPageNode>) Output_data.createItem() ;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;V = (IPageNodeInstance)kvpair.Value;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;V.IdInstance = KEY [0];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IIntegerInstance)kvpair.Key).Value = V.IdInstance;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;referenceV = new Dictionary&lt;int,IPageNodeInstance> ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dictionary [KEY [0]] = referenceV;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;referenceV [KEY [0]] = V;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;PAGENODES.Add (kvpair);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!dictionary.TryGetValue (KEY [1], out referenceW)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IInteger,IPageNode> kvpair = (IKVPairInstance&lt;IInteger,IPageNode>) Output_data.createItem() ;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;W = (IPageNodeInstance)kvpair.Value;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;W.IdInstance = KEY [1];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;((IIntegerInstance)kvpair.Key).Value = W.IdInstance;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;referenceW = new Dictionary&lt;int,IPageNodeInstance> ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dictionary [KEY [1]] = referenceW;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;referenceW [KEY [1]] = W;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;PAGENODES.Add (kvpair);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (!referenceV.TryGetValue (KEY [1], out temp)) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;V = referenceV [KEY [0]];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;W = referenceW [KEY [1]];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;referenceV [KEY [1]] = W;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;V.NeighborsInstance.Add (W.IdInstance);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;IEnumerator&lt;IKVPairInstance&lt;IInteger,IPageNode>> iterator = PAGENODES.GetEnumerator();&#xA;&#x9;&#x9;&#x9;while (iterator.MoveNext()) {&#xA;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IInteger,IPageNode> kvpair = iterator.Current;&#xA;&#x9;&#x9;&#x9;&#x9;output.put (kvpair);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;output.finish();&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IBreakInPageNodesImpl.cs" srcType="user" uri="br.ufc.mdcc.mapreduce.example.graph.pagerank.impl.BreakInPageNodesImpl/bin/1.0.0.0/IBreakInPageNodesImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.mapreduce.example.graph.pagerank.impl.BreakInPageNodesImpl/bin/1.0.0.0/BaseIBreakInPageNodesImpl.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.graph.pagerank.BreakInPageNodes/bin/1.0.0.0/IBreakInPageNodes.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="151" x="93" y="263">
        <color b="0" g="255" r="255"/>
      </visualDescription>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit iRef="IBreakInPageNodesImpl" multiple="false" private="false" replica="0" uRef="split_function" visibleInterface="true">
      <super cRef="base" uRef="split_function"/>
      <visualDescription h="40" w="151" x="93" y="363"/>
    </unit>
  </componentInfo>
</component:component>