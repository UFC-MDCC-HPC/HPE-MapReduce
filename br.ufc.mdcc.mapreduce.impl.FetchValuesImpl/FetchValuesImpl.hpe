<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000065ebbd54c877fe4e49e84cd8db20c54186a5def4c6e3cf6f68da7f49e35e30bbd71cca8ab56d43d6fffa42938bf0c5e2de9ff0612be949bf43190acecb5e793bd0e4a78d19fadfbc83931384e092b40d61e5f03fc9173af24e77b5a37aaa9ba7d7cae13064b20075075242119b7f188f5f5b371e05f0b576ae4a1bab50477f90" isAbstract="false" kind="Synchronizer" name="FetchValuesImpl" packagePath="br.ufc.mdcc.mapreduce.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000000158361d8c1ddb6c2155a3b9faddc943599d6825bf48af267ed21f7498ebe21d94d9b9b695acb812f96e5f15183722bad4af6db5184b079c9e0805f07a5fe7d39919c160ca74d4870aacc4e8e16b59792da993718213555c129823c2541a99922fb1ac06028a343766b007d3bf128ddf0da4d554f1542fa6222e34008c768b90" localRef="base" location="br.ufc.mdcc.mapreduce.FetchValues/FetchValues.hpe" name="FetchValues" package="br.ufc.mdcc.mapreduce" version="1.0.0.0">
        <visualDescription h="60" w="100" x="301" y="201">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="value_type" varName="OMV"/>
        <parameter formFieldId="partition_function" varName="P"/>
        <parameter formFieldId="key_type" varName="OMK"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a1d2d4f2ea9f962479f5322ab4d1b509fc8c95e67ad710c6bb2bc57522c8c96bb02c9f6dd000e20cf3098ef39cfffcb5af08f7fe86f5a1e1d0172e5578904f3160047cc21cbc9660df9c536444ce9e025fc3ca5bea6941da4aa0c6f38995d31933743052835857938e9f4726c55a065b54c9cd331a30361384b29cc34db7e285" localRef="map_result" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="true" name="Iterator" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="91" w="152" x="121" y="389">
            <color b="203" g="192" r="255"/>
          </visualDescription>
          <parameter formFieldId="item_type" varName="X###803017364"/>
          <unitBounds parallel="false" uRef="iterator">
            <visualDescription h="20" w="20" x="63" y="14"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a1d2d4f2ea9f962479f5322ab4d1b509fc8c95e67ad710c6bb2bc57522c8c96bb02c9f6dd000e20cf3098ef39cfffcb5af08f7fe86f5a1e1d0172e5578904f3160047cc21cbc9660df9c536444ce9e025fc3ca5bea6941da4aa0c6f38995d31933743052835857938e9f4726c55a065b54c9cd331a30361384b29cc34db7e285" localRef="reduce_job" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="true" name="Iterator" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="98" w="137" x="498" y="344">
            <color b="203" g="192" r="255"/>
          </visualDescription>
          <parameter formFieldId="item_type" varName="X###1525599000"/>
          <unitBounds parallel="false" uRef="iterator">
            <visualDescription h="20" w="20" x="56" y="14"/>
          </unitBounds>
        </port>
        <unitBounds parallel="true" uRef="mapper">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
        <unitBounds parallel="true" uRef="reducer">
          <visualDescription h="20" w="20" x="28" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000372d83aaa123858a97a353cd956eea59b526f3524a0b69ca51d23c6b5e50c14721ee4166d87e7e9f451ee95352730aef34e9cb849e6b5ea13671a9b755f9613ba945240437226e4e67762b01435f8463578849f4af6d6de0f843be1f2709a38edbeeb542483818886b9fcbf40c442db2d79060d42dd605ee7983b06ebf973d85" localRef="value_type" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="94" y="75">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000372d83aaa123858a97a353cd956eea59b526f3524a0b69ca51d23c6b5e50c14721ee4166d87e7e9f451ee95352730aef34e9cb849e6b5ea13671a9b755f9613ba945240437226e4e67762b01435f8463578849f4af6d6de0f843be1f2709a38edbeeb542483818886b9fcbf40c442db2d79060d42dd605ee7983b06ebf973d85" localRef="key_type" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="206" y="200">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000259d9a37452122fc0092cfaf338c10fa02e9f7f2d148e7058277ee248a978751d8c2cef057ac95b56b0b8819a43755332807595e583f17df01ee3adb7025c7fb80d47f84d19350ba4e2fb2fafb3c3e33d9d93839eaa430659a4b73f37f1983e60b6589bf6cb2327b1da27fe26756b22a36afe2e1b32208fb52bc5c0249a63e82" localRef="partition_function_type" location="br.ufc.mdcc.mapreduce.user.PartitionFunction/PartitionFunction.hpe" multiple="false" name="PartitionFunction" package="br.ufc.mdcc.mapreduce.user" exposed="false">
      <visualDescription h="60" w="100" x="41" y="324">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="input_key" varName="OMK"/>
      <unitBounds parallel="false" uRef="partition_function">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="partition_function_type" direct="true" varName="P"/>
    <supplyParameter cRef="key_type" direct="true" varName="OMK"/>
    <supplyParameter cRef="value_type" direct="true" varName="OMV"/>
    <interface iRef="IMapperFetchValuesImpl" nArgs="3">
      <slice isRef="map_result">
        <originRef cRef="map_result" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="52" y="42"/>
      </slice>
      <slice isRef="partition_function">
        <originRef cRef="partition_function" iRef="IPartitionFunction"/>
        <visualDescription h="10" w="10" x="7" y="38"/>
      </slice>
      <slice isRef="mpi_comm">
        <originRef cRef="mpi_comm" iRef="IMPIDirect"/>
        <visualDescription h="10" w="10" x="84" y="39"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.mapreduce.FetchValues;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.mapreduce.user.PartitionFunction;&#xA;using environment.MPIDirect;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.impl.FetchValuesImpl { &#xA;&#xA;&#x9;public abstract class BaseIMapperFetchValuesImpl&lt;OMK,OMV,P>: Synchronizer, BaseIFetchValuesMapper&lt;OMK,OMV,P>&#xA;&#x9;&#x9;where OMK:IData&#xA;&#x9;&#x9;where OMV:IData&#xA;&#x9;&#x9;where P:IPartitionFunction&lt;OMK>&#xA;{&#xA;&#xA;&#x9;&#x9;private IInteger partition_key = default(IInteger);&#xA;&#xA;&#x9;&#x9;protected IInteger Partition_key {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.partition_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.partition_key = (IInteger) Services.getPort(&quot;output_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.partition_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private P partition_function = default(P);&#xA;&#xA;&#x9;&#x9;protected P Partition_function {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.partition_function == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.partition_function = (P) Services.getPort(&quot;partition_function&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.partition_function;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;private OMK data_key = default(OMK);&#xA;&#xA;&#x9;&#x9;protected OMK Data_key {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.data_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.data_key = (OMK) Services.getPort(&quot;input_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.data_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;OMK,OMV>> map_result = null;&#xA;&#x9;&#xA;&#x9;&#x9;public IIterator&lt;IKVPair&lt;OMK,OMV>> Map_result {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.map_result == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;this.map_result = (IIterator&lt;IKVPair&lt;OMK,OMV>>) Services.getPort(&quot;map_result&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.map_result;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private  IMPIDirect mpi_comm = null;&#xA;&#xA;&#x9;&#x9;protected IMPIDirect Mpi_comm {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.mpi_comm == null) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.mpi_comm = (IMPIDirect) Services.getPort(&quot;mpi_comm&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;return this.mpi_comm;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIMapperFetchValuesImpl.cs" srcType="base" uri="br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/BaseIMapperFetchValuesImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Iterator/bin/1.0.0.0/IIterator.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.FetchValues/bin/1.0.0.0/BaseIFetchValuesMapper.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.mapreduce.FetchValues;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.mapreduce.user.PartitionFunction;&#xA;using environment.MPIDirect;&#xA;using System.Collections.Generic;&#xA;using System.Threading.Tasks;&#xA;using System.Collections.Concurrent;&#xA;using System.Threading;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.Integer;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.impl.FetchValuesImpl { &#xA;&#xA;&#x9;public class IMapperFetchValuesImpl&lt;OMK,OMV,P> : BaseIMapperFetchValuesImpl&lt;OMK,OMV,P>, IFetchValuesMapper&lt;OMK,OMV,P>&#xA;&#x9;&#x9;where OMK:IData&#xA;&#x9;&#x9;where OMV:IData&#xA;&#x9;&#x9;where P:IPartitionFunction&lt;OMK>&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;private MPI.Intracommunicator comm = null;&#xA;&#x9;&#x9;&#x9;static private int TAG_FETCHVALUES_OMV = 345;&#xA;&#x9;&#x9;&#x9;static private int TAG_FETCHVALUES_OMV_FINISH = 347;&#xA;&#xA;&#x9;&#x9;&#x9;public IMapperFetchValuesImpl() {&#x9;} &#xA;&#xA;&#x9;&#x9;&#x9;override public void initialize()&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;// Inicializar o comunicador MPI. &#xA;&#x9;&#x9;&#x9;&#x9;comm = this.Communicator;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;public override void main() &#xA;&#x9;&#x9;&#x9;{ &#xA;&#xA;&#x9;&#x9;&#x9;&#x9;/* 1. Ler os elementos de Source_data, um a um, e copiar a chave (OMK) em Data_key.&#xA;&#x9;&#x9;&#x9;&#x9; * 2. A cada chave de Source_data, chamar Partition_function.go();&#xA;&#x9;&#x9;&#x9;&#x9; * 3. Enviar o resultado de Partition_function.go(), via MPI, para o gerente (unidade target).&#xA;&#x9;&#x9;&#x9;&#x9; */&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;int[] reducer_ranks = this.UnitRanks[&quot;reducer&quot;];&#xA;&#x9;&#x9;&#x9;&#x9;int nr = this.UnitSize[&quot;reducer&quot;];&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;Partition_function.NumberOfPartitions = nr;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;OMK,OMV>> map_result_instance = (IIteratorInstance&lt;IKVPair&lt;OMK,OMV>>) Map_result.Instance;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;int count=0;&#xA;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;OMK,OMV> last_item = null;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;object item_object;&#xA;&#x9;&#x9;&#x9;&#x9;// 1. Ler os elementos de Source_data, um a um, e copiar a chave (OMK) em Data_key.&#xA;&#x9;&#x9;&#x9;&#x9;while (map_result_instance.fetch_next(out item_object)) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;OMK,OMV> item = (IKVPairInstance&lt;OMK,OMV>) item_object;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;last_item = item;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Data_key.Instance = item.Key;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// 2. A cada chave de Source_data, chamar Partition_function.go();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Partition_function.go ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;int i = (int) ((IIntegerInstance)Partition_key.Instance).Value;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(WorldComm.Rank + &quot;: PARTITIONER (FETCH VALUES SOURCE) LOOP - SEND TO &quot; + reducer_ranks[i] + &quot;, source rank is &quot; + comm.Rank + &quot;, count=&quot; + (count++) + &quot;i=&quot; + i); &#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;comm.Send&lt;IKVPairInstance&lt;OMK,OMV>>(item, reducer_ranks[i], TAG_FETCHVALUES_OMV);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;for (int i=0; i &lt; nr; i++)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;comm.Send&lt;IKVPairInstance&lt;OMK,OMV>>(last_item, reducer_ranks[i], TAG_FETCHVALUES_OMV_FINISH);&#xA;&#xA;//&#x9;&#x9;&#x9;&#x9;Console.WriteLine(WorldComm.Rank + &quot;: PARTITIONER (FETCH VALUES SOURCE) - FINISH &quot;);&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;}&#xA;" fileType="library" name="IMapperFetchValuesImpl.cs" srcType="user" uri="br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/IMapperFetchValuesImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/BaseIMapperFetchValuesImpl.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.FetchValues/bin/1.0.0.0/IFetchValuesMapper.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="58" w="106" x="86" y="91">
        <color b="0" g="255" r="255"/>
      </visualDescription>
      <port name="map_result">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="map_result" sRef="map_result"/>
      </port>
      <externalReferences>MPI</externalReferences>
      <parameter iname="IData" order="1" parid="value_type" uname="data" varid="OMV"/>
      <parameter iname="IData" order="0" parid="key_type" uname="data" varid="OMK"/>
      <parameter iname="IPartitionFunction" order="2" parid="partition_function" uname="partition_function" varid="P"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IReducerFetchValuesImpl" nArgs="2">
      <slice isRef="reduce_job">
        <originRef cRef="reduce_job" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="61" y="33"/>
      </slice>
      <slice isRef="mpi_comm">
        <originRef cRef="mpi_comm" iRef="IMPIDirect"/>
        <visualDescription h="10" w="10" x="16" y="31"/>
      </slice>
      <slice isRef="reduce_job_values_factory">
        <originRef cRef="reduce_job_values_factory" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="77" y="20"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.mapreduce.FetchValues;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using environment.MPIDirect;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.impl.FetchValuesImpl { &#xA;&#xA;&#x9;public abstract class BaseIReducerFetchValuesImpl&lt;OMK,OMV>: Synchronizer, BaseIFetchValuesReducer&lt;OMK,OMV>&#xA;&#x9;&#x9;where OMK:IData&#xA;&#x9;&#x9;where OMV:IData&#xA;&#x9;{&#xA;&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;OMK,IIterator&lt;OMV>>> reduce_job = null;&#xA;&#xA;&#x9;&#x9;public IIterator&lt;IKVPair&lt;OMK,IIterator&lt;OMV>>> Reduce_job {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.reduce_job == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.reduce_job = (IIterator&lt;IKVPair&lt;OMK,IIterator&lt;OMV>>>) Services.getPort(&quot;reduce_job&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.reduce_job;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private  IMPIDirect mpi_comm = null;&#xA;&#xA;&#x9;&#x9;protected IMPIDirect Mpi_comm {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.mpi_comm == null) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.mpi_comm = (IMPIDirect) Services.getPort(&quot;mpi_comm&quot;);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;return this.mpi_comm;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IIterator&lt;OMV> reduce_job_values_factory = null;&#xA;&#xA;&#x9;&#x9;public IIterator&lt;OMV>  Reduce_job_values_factory {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.reduce_job_values_factory == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.reduce_job_values_factory = (IIterator&lt;OMV>) Services.getPort(&quot;reduce_job_values_factory&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.reduce_job_values_factory;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIReducerFetchValuesImpl.cs" srcType="base" uri="br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/BaseIReducerFetchValuesImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Iterator/bin/1.0.0.0/IIterator.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.FetchValues/bin/1.0.0.0/BaseIFetchValuesReducer.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.mapreduce.FetchValues;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.impl.FetchValuesImpl { &#xA;&#xA;&#x9;public class IReducerFetchValuesImpl&lt;OMK,OMV> : BaseIReducerFetchValuesImpl&lt;OMK,OMV>, IFetchValuesReducer&lt;OMK,OMV>&#xA;&#x9;&#x9;where OMK:IData&#xA;&#x9;&#x9;where OMV:IData&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;// Vari&#xe1;veis do Ambiente MPI.&#xA;&#x9;&#x9;private MPI.Intracommunicator comm = null;&#xA;&#x9;&#x9;static private int TAG_FETCHVALUES_OMV = 345;&#xA;&#x9;&#x9;static private int TAG_FETCHVALUES_OMV_FINISH = 347;&#xA;&#xA;&#xA;&#x9;&#x9;//public IReducerFetchValuesImpl() {&#x9;} &#xA;&#xA;&#x9;&#x9;override public void initialize()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;// Inicializar o comunicador MPI. &#xA;&#x9;&#x9;&#x9;comm = this.Communicator;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public override void main() &#xA;&#x9;&#x9;{ &#xA;&#x9;&#x9;&#x9;MPI.CompletedStatus status;&#xA;&#x9;&#x9;&#x9;IKVPairInstance&lt;OMK,OMV> kv;&#xA;&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;OMK,IIterator&lt;OMV>>> reduce_job_instance = (IIteratorInstance&lt;IKVPair&lt;OMK,IIterator&lt;OMV>>>) Reduce_job.Instance;&#xA;&#xA;&#x9;&#x9;&#x9;IDictionary&lt;object,IIteratorInstance&lt;OMV>> kv_cache = new Dictionary&lt;object,IIteratorInstance&lt;OMV>>();&#xA;&#xA;//&#x9;&#x9;&#x9;Console.WriteLine(WorldComm.Rank + &quot;: PARTITIONER (FETCH VALUES TARGET) BEGIN RECEIVE 1 !&quot;);&#xA;&#x9;&#x9;&#x9;comm.Receive&lt;IKVPairInstance&lt;OMK,OMV>>(MPI.Unsafe.MPI_ANY_SOURCE, MPI.Unsafe.MPI_ANY_TAG, out kv, out status);&#xA;//&#x9;&#x9;&#x9;Console.WriteLine(WorldComm.Rank + &quot;: PARTITIONER (FETCH VALUES TARGET) END RECEIVE 1  ! tag=&quot; + status.Tag + &quot;, source=&quot; + status.Source);&#xA;&#xA;&#x9;&#x9;&#x9;int count=0;&#xA;&#x9;&#x9;&#x9;while (status.Tag != TAG_FETCHVALUES_OMV_FINISH)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;IIteratorInstance&lt;OMV> iterator = null;&#xA;&#x9;&#x9;&#x9;&#x9;if (!kv_cache.ContainsKey(kv.Key))&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(WorldComm.Rank + &quot;: PARTITIONER (FETCH VALUES TARGET) LOOP RECV 1 !&quot; + (count++) + &quot; &quot; + kv.Key.GetType());&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;iterator = Reduce_job_values_factory.newIteratorInstance ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;kv_cache.Add(kv.Key, iterator);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;OMK,IIterator&lt;OMV>> item = (IKVPairInstance&lt;OMK,IIterator&lt;OMV>>) Reduce_job.createItem();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item.Key = kv.Key;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;item.Value = iterator;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;reduce_job_instance.put (item);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else  {&#xA;//&#x9;&#x9;&#x9;&#x9;&#x9;Console.WriteLine(WorldComm.Rank + &quot;: PARTITIONER (FETCH VALUES TARGET) LOOP RECV 2 !&quot; + (count++));&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;kv_cache.TryGetValue(kv.Key, out iterator);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;iterator.put(kv.Value);&#xA;&#xA;//&#x9;&#x9;&#x9;&#x9;Console.WriteLine(WorldComm.Rank + &quot;: PARTITIONER (FETCH VALUES TARGET) BEGIN RECEIVE n !&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;comm.Receive&lt;IKVPairInstance&lt;OMK,OMV>>(MPI.Unsafe.MPI_ANY_SOURCE, MPI.Unsafe.MPI_ANY_TAG, out kv, out status);&#xA;//&#x9;&#x9;&#x9;&#x9;Console.WriteLine(WorldComm.Rank + &quot;: PARTITIONER (FETCH VALUES TARGET) END RECEIVE n ! tag=&quot; + status.Tag + &quot;, source=&quot; + status.Source);&#xA;&#x9;&#x9;&#x9;} &#xA;&#xA;&#x9;&#x9;&#x9;foreach (KeyValuePair&lt;object,IIteratorInstance&lt;OMV>> kv_item in kv_cache)&#xA;&#x9;&#x9;&#x9;&#x9;kv_item.Value.finish();&#xA;&#xA;&#x9;&#x9;&#x9;reduce_job_instance.finish();&#xA;//&#x9;&#x9;&#x9;Console.WriteLine(WorldComm.Rank + &quot;: PARTITIONER (FETCH VALUES TARGET) - FINISH &quot;);&#xA;&#xA;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IReducerFetchValuesImpl.cs" srcType="user" uri="br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/IReducerFetchValuesImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/BaseIReducerFetchValuesImpl.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.FetchValues/bin/1.0.0.0/IFetchValuesReducer.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="52" w="102" x="477" y="81">
        <color b="255" g="144" r="30"/>
      </visualDescription>
      <port name="reduce_job">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="reduce_job" sRef="reduce_job"/>
      </port>
      <externalReferences>MPI</externalReferences>
      <parameter iname="IData" order="1" parid="value_type" uname="data" varid="OMV"/>
      <parameter iname="IData" order="0" parid="key_type" uname="data" varid="OMK"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit iRef="IMapperFetchValuesImpl" multiple="true" private="false" replica="0" uRef="mapper" visibleInterface="true">
      <super cRef="base" uRef="mapper"/>
      <visualDescription h="58" w="106" x="53" y="240"/>
    </unit>
    <unit iRef="IReducerFetchValuesImpl" multiple="true" private="false" replica="0" uRef="reducer" visibleInterface="true">
      <super cRef="base" uRef="reducer"/>
      <visualDescription h="52" w="102" x="477" y="185"/>
    </unit>
  </componentInfo>
</component:component>