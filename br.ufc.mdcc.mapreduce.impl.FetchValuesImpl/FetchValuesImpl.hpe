<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000052f92b8c224937fa14dbeee01be1a919767ec00321cfa5dd6bfef28fb213edb8f08b481a7f21b1ae4b2c4e08129acd3cd2fab2fb0ed39d1e06cc52251a3ad5cdce066ec6f417182d9e9f804a5b8307fd4396fbd8b214c3eb240f87c794bbb599be9e3411e17e0de751b3737c7daa3156845ccddd33cba508740c5c0fb234f88" isAbstract="false" kind="Synchronizer" name="FetchValuesImpl" packagePath="br.ufc.mdcc.mapreduce.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000371f8e50263e515cd9e24d4e32613ca8355b805b778b9e37f3801716081238effd5d03f6652f7994a199242d9bd1a4a5990e43dd48c0d34ecdbb821e4a704432b283053795a71510c23f86ac7a9e27d637cccfd5b12ab482afcdbd5e63534a8d13a8b9e4ac3441ff0c8bad584493c357b9c71d37942a0016bdbf2a71a10372b5" localRef="base" location="br.ufc.mdcc.mapreduce.FetchValues/FetchValues.hpe" name="FetchValues" package="br.ufc.mdcc.mapreduce" version="1.0.0.0">
        <visualDescription h="60" w="100" x="301" y="201">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="value_type" varName="OMV"/>
        <parameter formFieldId="partition_function" varName="P"/>
        <parameter formFieldId="key_type" varName="OMK"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a1d2d4f2ea9f962479f5322ab4d1b509fc8c95e67ad710c6bb2bc57522c8c96bb02c9f6dd000e20cf3098ef39cfffcb5af08f7fe86f5a1e1d0172e5578904f3160047cc21cbc9660df9c536444ce9e025fc3ca5bea6941da4aa0c6f38995d31933743052835857938e9f4726c55a065b54c9cd331a30361384b29cc34db7e285" localRef="map_result" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="true" name="Iterator" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="91" w="152" x="141" y="345">
            <color b="203" g="192" r="255"/>
          </visualDescription>
          <parameter formFieldId="item_type" varName="X###368473973"/>
          <unitBounds parallel="false" uRef="iterator">
            <visualDescription h="20" w="20" x="63" y="14"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a1d2d4f2ea9f962479f5322ab4d1b509fc8c95e67ad710c6bb2bc57522c8c96bb02c9f6dd000e20cf3098ef39cfffcb5af08f7fe86f5a1e1d0172e5578904f3160047cc21cbc9660df9c536444ce9e025fc3ca5bea6941da4aa0c6f38995d31933743052835857938e9f4726c55a065b54c9cd331a30361384b29cc34db7e285" localRef="reduce_job" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="true" name="Iterator" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="98" w="137" x="498" y="344">
            <color b="203" g="192" r="255"/>
          </visualDescription>
          <parameter formFieldId="item_type" varName="X###1746709910"/>
          <unitBounds parallel="false" uRef="iterator">
            <visualDescription h="20" w="20" x="56" y="14"/>
          </unitBounds>
        </port>
        <unitBounds parallel="true" uRef="mapper">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
        <unitBounds parallel="true" uRef="reducer">
          <visualDescription h="20" w="20" x="28" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000372d83aaa123858a97a353cd956eea59b526f3524a0b69ca51d23c6b5e50c14721ee4166d87e7e9f451ee95352730aef34e9cb849e6b5ea13671a9b755f9613ba945240437226e4e67762b01435f8463578849f4af6d6de0f843be1f2709a38edbeeb542483818886b9fcbf40c442db2d79060d42dd605ee7983b06ebf973d85" localRef="value_type" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="94" y="75">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000372d83aaa123858a97a353cd956eea59b526f3524a0b69ca51d23c6b5e50c14721ee4166d87e7e9f451ee95352730aef34e9cb849e6b5ea13671a9b755f9613ba945240437226e4e67762b01435f8463578849f4af6d6de0f843be1f2709a38edbeeb542483818886b9fcbf40c442db2d79060d42dd605ee7983b06ebf973d85" localRef="key_type" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="100" x="206" y="200">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000259d9a37452122fc0092cfaf338c10fa02e9f7f2d148e7058277ee248a978751d8c2cef057ac95b56b0b8819a43755332807595e583f17df01ee3adb7025c7fb80d47f84d19350ba4e2fb2fafb3c3e33d9d93839eaa430659a4b73f37f1983e60b6589bf6cb2327b1da27fe26756b22a36afe2e1b32208fb52bc5c0249a63e82" localRef="partition_function_type" location="br.ufc.mdcc.mapreduce.user.PartitionFunction/PartitionFunction.hpe" multiple="false" name="PartitionFunction" package="br.ufc.mdcc.mapreduce.user" exposed="false">
      <visualDescription h="60" w="100" x="41" y="324">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="input_key" varName="OMK"/>
      <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000372d83aaa123858a97a353cd956eea59b526f3524a0b69ca51d23c6b5e50c14721ee4166d87e7e9f451ee95352730aef34e9cb849e6b5ea13671a9b755f9613ba945240437226e4e67762b01435f8463578849f4af6d6de0f843be1f2709a38edbeeb542483818886b9fcbf40c442db2d79060d42dd605ee7983b06ebf973d85" localRef="input_key" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="true">
        <visualDescription h="60" w="100" x="206" y="200">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <unitBounds parallel="false" uRef="data">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </port>
      <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000856221c6e60ff0c4ed3fb6226a0dc47e0d08669f122897225dc4c261dd9bb4e5e8186777ebd747933adb3ddaf3a101ed6b3c10b28685af9bcb3c307be4224d1e5eb317bb936f47a12b6d859bc89cddcf762cc79d16cc17b5d470bf6a55d2b5bf5859ada5b8af1a66163ebb01de4dbb395c11a7850b2e7a24726938565a56b589" localRef="output_key" location="br.ufc.mdcc.common.Integer/Integer.hpe" multiple="false" name="Integer" package="br.ufc.mdcc.common" exposed="true">
        <visualDescription h="60" w="100" x="168" y="459">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <unitBounds parallel="false" uRef="data">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </port>
      <unitBounds parallel="false" uRef="partition_function">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="partition_function_type" direct="true" varName="P"/>
    <supplyParameter cRef="key_type" direct="true" varName="OMK"/>
    <supplyParameter cRef="value_type" direct="true" varName="OMV"/>
    <interface iRef="IMapperFetchValuesImpl" nArgs="3">
      <slice isRef="map_result">
        <originRef cRef="map_result" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="52" y="42"/>
      </slice>
      <slice isRef="partition_function">
        <originRef cRef="partition_function" iRef="IPartitionFunction"/>
        <visualDescription h="10" w="10" x="7" y="38"/>
      </slice>
      <slice isRef="mpi_comm">
        <originRef cRef="mpi_comm" iRef="IMPIDirect"/>
        <visualDescription h="10" w="10" x="84" y="39"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.mapreduce.FetchValues;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.mapreduce.user.PartitionFunction;&#xA;using environment.MPIDirect;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.impl.FetchValuesImpl { &#xA;&#xA;&#x9;public abstract class BaseIMapperFetchValuesImpl&lt;OMK,OMV,P>: Synchronizer, BaseIFetchValuesMapper&lt;OMK,OMV,P>&#xA;&#x9;&#x9;where OMK:IData&#xA;&#x9;&#x9;where OMV:IData&#xA;&#x9;&#x9;where P:IPartitionFunction&lt;OMK>&#xA;{&#xA;&#xA;&#x9;&#x9;private IInteger partition_key = default(IInteger);&#xA;&#xA;&#x9;&#x9;protected IInteger Partition_key {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.partition_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.partition_key = (IInteger) Services.getPort(&quot;partition_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.partition_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private P partition_function = default(P);&#xA;&#xA;&#x9;&#x9;protected P Partition_function {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.partition_function == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.partition_function = (P) Services.getPort(&quot;partition_function&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.partition_function;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;&#x9;private OMK data_key = default(OMK);&#xA;&#xA;&#x9;&#x9;protected OMK Data_key {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.data_key == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.data_key = (OMK) Services.getPort(&quot;data_key&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.data_key;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#xA;&#xA;&#x9;private IIterator&lt;IKVPair&lt;OMK,OMV>> map_result = null;&#xA;&#xA;&#x9;public IIterator&lt;IKVPair&lt;OMK,OMV>> Map_result {&#xA;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;if (this.map_result == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.map_result = (IIterator&lt;IKVPair&lt;OMK,OMV>>) Services.getPort(&quot;map_result&quot;);&#xA;&#x9;&#x9;&#x9;return this.map_result;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;private  IMPIDirect mpi_comm = null;&#xA;&#xA;&#x9;&#x9;&#x9;protected IMPIDirect Mpi_comm {&#xA;&#x9;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (this.mpi_comm == null) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;this.mpi_comm = (IMPIDirect) Services.getPort(&quot;mpi_comm&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;return this.mpi_comm;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIMapperFetchValuesImpl.cs" srcType="base" uri="br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/BaseIMapperFetchValuesImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Iterator/bin/1.0.0.0/IIterator.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.FetchValues/bin/1.0.0.0/BaseIFetchValuesMapper.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.mapreduce.FetchValues;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.mapreduce.user.PartitionFunction;&#xA;using environment.MPIDirect;&#xA;using System.Collections.Generic;&#xA;using System.Threading.Tasks;&#xA;using System.Collections.Concurrent;&#xA;using System.Threading;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.Integer;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.impl.FetchValuesImpl { &#xA;&#xA;&#x9;public class IMapperFetchValuesImpl&lt;OMK,OMV,P> : BaseIMapperFetchValuesImpl&lt;OMK,OMV,P>, IFetchValuesMapper&lt;OMK,OMV,P>&#xA;&#x9;&#x9;where OMK:IData&#xA;&#x9;&#x9;where OMV:IData&#xA;&#x9;&#x9;where P:IPartitionFunction&lt;OMK>&#xA;&#x9;&#x9;{&#xA;&#xA;&#x9;&#x9;&#x9;private MPI.Intracommunicator worldcomm = null;&#xA;&#x9;&#x9;&#x9;static private int TAG_FETCHVALUES_OMV = 345;&#xA;&#x9;&#x9;&#x9;static private int TAG_FETCHVALUES_OMV_FINISH = 347;&#xA;&#xA;&#x9;&#x9;&#x9;public IMapperFetchValuesImpl() { } &#xA;&#xA;&#x9;&#x9;&#x9;override public void initialize()&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;// Inicializar o comunicador MPI. &#xA;&#x9;&#x9;&#x9;&#x9;worldcomm = Mpi_comm.worldComm();&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;private ConcurrentQueue&lt;IKVPairInstance&lt;OMK,OMV>>[] values;&#xA;&#x9;&#x9;&#x9;private int[] counts;&#xA;&#xA;&#x9;&#x9;&#x9;public override void main() &#xA;&#x9;&#x9;&#x9;{ &#xA;&#xA;&#x9;&#x9;&#x9;&#x9;/* 1. Ler os elementos de Source_data, um a um, e copiar a chave (OMK) em Data_key.&#xA;&#x9;&#x9;&#x9;&#x9; * 2. A cada chave de Source_data, chamar Partition_function.go();&#xA;&#x9;&#x9;&#x9;&#x9; * 3. Enviar o resultado de Partition_function.go(), via MPI, para o gerente (unidade target).&#xA;&#x9;&#x9;&#x9;&#x9; */&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;int nr = this.UnitSize[&quot;reducer&quot;];&#xA;&#x9;&#x9;&#x9;&#x9;values = new ConcurrentQueue&lt;IKVPairInstance&lt;OMK,OMV>>[nr];&#xA;&#x9;&#x9;&#x9;&#x9;counts = new int[nr];&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;TaskFactory task_factory = new TaskFactory();&#xA;&#x9;&#x9;&#x9;&#x9;for (int reducer_rank=0; reducer_rank&lt;nr; reducer_rank++) {&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;values[reducer_rank] = new ConcurrentQueue&lt;IKVPairInstance&lt;OMK,OMV>>();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;task_factory.StartNew(delegate { send_values(reducer_rank); });&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;Partition_function.NumberOfPartitions = nr;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;OMK,OMV>> map_result_instance = (IIteratorInstance&lt;IKVPair&lt;OMK,OMV>>) Map_result.Instance;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;// 1. Ler os elementos de Source_data, um a um, e copiar a chave (OMK) em Data_key.&#xA;&#x9;&#x9;&#x9;&#x9;while (!map_result_instance.HasFinished) &#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;OMK,OMV> item = (IKVPairInstance&lt;OMK,OMV>) map_result_instance.fetch_next ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Data_key.Instance = item.Key;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;// 2. A cada chave de Source_data, chamar Partition_function.go();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Partition_function.go ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;int reducer_rank = (int) ((IIntegerInstance)Partition_key.Instance).Value;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;values[reducer_rank].Enqueue(item);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;counts[reducer_rank]++;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;private void send_values(int reducer_rank) &#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;ConcurrentQueue&lt;IKVPairInstance&lt;OMK,OMV>> reducer_values = values[reducer_rank];&#xA;&#x9;&#x9;&#x9;&#x9;int count_values = counts[reducer_rank];&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;int tag = TAG_FETCHVALUES_OMV;&#xA;&#x9;&#x9;&#x9;&#x9;do&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;OMK,OMV> pair;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;if (count_values>0 &amp;&amp; reducer_values.TryDequeue(out pair)) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;count_values--;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;tag = count_values==0 ? TAG_FETCHVALUES_OMV_FINISH : TAG_FETCHVALUES_OMV;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;worldcomm.Send&lt;IKVPairInstance&lt;OMK,OMV>>(pair, reducer_rank, tag);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;while(tag == TAG_FETCHVALUES_OMV_FINISH);&#xA;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;}&#xA;" fileType="library" name="IMapperFetchValuesImpl.cs" srcType="user" uri="br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/IMapperFetchValuesImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/BaseIMapperFetchValuesImpl.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.FetchValues/bin/1.0.0.0/IFetchValuesMapper.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="58" w="106" x="114" y="69">
        <color b="0" g="255" r="255"/>
      </visualDescription>
      <port name="map_result">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="map_result" sRef="map_result"/>
      </port>
      <externalReferences>MPI</externalReferences>
      <parameter iname="IData" order="1" parid="value_type" uname="data" varid="OMV"/>
      <parameter iname="IData" order="0" parid="key_type" uname="data" varid="OMK"/>
      <parameter iname="IPartitionFunction" order="2" parid="partition_function" uname="partition_function" varid="P"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <interface iRef="IReducerFetchValuesImpl" nArgs="2">
      <slice isRef="reduce_job">
        <originRef cRef="reduce_job" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="61" y="33"/>
      </slice>
      <slice isRef="mpi_comm">
        <originRef cRef="mpi_comm" iRef="IMPIDirect"/>
        <visualDescription h="10" w="10" x="16" y="31"/>
      </slice>
      <slice isRef="reduce_job_values_factory">
        <originRef cRef="reduce_job_values_factory" iRef="IIterator"/>
        <visualDescription h="10" w="10" x="77" y="20"/>
      </slice>
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.mapreduce.FetchValues;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using environment.MPIDirect;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.impl.FetchValuesImpl { &#xA;&#xA;&#x9;public abstract class BaseIReducerFetchValuesImpl&lt;OMK,OMV>: Synchronizer, BaseIFetchValuesReducer&lt;OMK,OMV>&#xA;&#x9;&#x9;where OMK:IData&#xA;&#x9;&#x9;where OMV:IData&#xA;&#x9;{&#xA;&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;OMK,IIterator&lt;OMV>>> reduce_job = null;&#xA;&#xA;&#x9;&#x9;public IIterator&lt;IKVPair&lt;OMK,IIterator&lt;OMV>>> Reduce_job {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.reduce_job == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.reduce_job = (IIterator&lt;IKVPair&lt;OMK,IIterator&lt;OMV>>>) Services.getPort(&quot;reduce_job&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.reduce_job;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private  IMPIDirect mpi_comm = null;&#xA;&#xA;&#x9;&#x9;protected IMPIDirect Mpi_comm {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.mpi_comm == null) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.mpi_comm = (IMPIDirect) Services.getPort(&quot;mpi_comm&quot;);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;return this.mpi_comm;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IIterator&lt;OMV> reduce_job_values_factory = null;&#xA;&#xA;&#x9;&#x9;public IIterator&lt;OMV>  Reduce_job_values_factory {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.reduce_job_values_factory == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.reduce_job_values_factory = (IIterator&lt;OMV>) Services.getPort(&quot;reduce_job_values_factory&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.reduce_job_values_factory;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#xA;&#xA;&#xA;&#x9;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIReducerFetchValuesImpl.cs" srcType="base" uri="br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/BaseIReducerFetchValuesImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Iterator/bin/1.0.0.0/IIterator.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.FetchValues/bin/1.0.0.0/BaseIFetchValuesReducer.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.mapreduce.FetchValues;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using System.Collections.Generic;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.impl.FetchValuesImpl { &#xA;&#xA;&#x9;public class IReducerFetchValuesImpl&lt;OMK,OMV> : BaseIReducerFetchValuesImpl&lt;OMK,OMV>, IFetchValuesReducer&lt;OMK,OMV>&#xA;&#x9;&#x9;where OMK:IData&#xA;&#x9;&#x9;where OMV:IData&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;// Vari&#xe1;veis do Ambiente MPI.&#xA;&#x9;&#x9;private MPI.Intracommunicator worldcomm = null;&#xA;&#x9;&#x9;static private int TAG_FETCHVALUES_OMV = 345;&#xA;&#x9;&#x9;static private int TAG_FETCHVALUES_OMV_FINISH = 347;&#xA;&#xA;&#xA;&#x9;&#x9;public IReducerFetchValuesImpl() {&#x9;} &#xA;&#xA;&#x9;&#x9;override public void initialize()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;// Inicializar o comunicador MPI. &#xA;&#x9;&#x9;&#x9;worldcomm = Mpi_comm.worldComm();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public override void main() &#xA;&#x9;&#x9;{ &#xA;&#x9;&#x9;&#x9;MPI.CompletedStatus status;&#xA;&#x9;&#x9;&#x9;IKVPairInstance&lt;OMK,IIterator&lt;OMV>> kv;&#xA;&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;OMK,IIterator&lt;OMV>>> reduce_job_instance = (IIteratorInstance&lt;IKVPair&lt;OMK,IIterator&lt;OMV>>>) Reduce_job.Instance;&#xA;&#xA;&#x9;&#x9;&#x9;IDictionary&lt;object,IIteratorInstance&lt;OMV>> kv_cache = new Dictionary&lt;object, IIteratorInstance&lt;OMV>>();&#xA;&#xA;&#x9;&#x9;&#x9;worldcomm.Receive&lt;IKVPairInstance&lt;OMK,IIterator&lt;OMV>>>(MPI.Unsafe.MPI_ANY_SOURCE, MPI.Unsafe.MPI_ANY_TAG, out kv, out status);&#xA;&#x9;&#x9;&#x9;while (status.Tag != TAG_FETCHVALUES_OMV_FINISH)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;IIteratorInstance&lt;OMV> iterator = null;&#xA;&#x9;&#x9;&#x9;&#x9;if (!kv_cache.ContainsKey(kv.Key))&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;iterator = Reduce_job_values_factory.newIteratorInstance ();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;kv_cache.Add(kv.Key, (IIteratorInstance&lt;OMV>) kv.Value);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;reduce_job_instance.put (kv);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;kv_cache.TryGetValue(kv.Key, out iterator);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;&#x9;iterator.putAll((IIteratorInstance&lt;OMV>) kv.Value);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;worldcomm.Receive&lt;IKVPairInstance&lt;OMK,IIterator&lt;OMV>>>(MPI.Unsafe.MPI_ANY_SOURCE, MPI.Unsafe.MPI_ANY_TAG, out kv, out status);&#xA;&#x9;&#x9;&#x9;} &#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IReducerFetchValuesImpl.cs" srcType="user" uri="br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/IReducerFetchValuesImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.mapreduce.impl.FetchValuesImpl/bin/1.0.0.0/BaseIReducerFetchValuesImpl.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.FetchValues/bin/1.0.0.0/IFetchValuesReducer.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="52" w="102" x="477" y="81">
        <color b="255" g="144" r="30"/>
      </visualDescription>
      <port name="reduce_job">
        <visualDescription h="10" w="10" x="0" y="0"/>
        <slice pRef="reduce_job" sRef="reduce_job"/>
      </port>
      <externalReferences>MPI</externalReferences>
      <parameter iname="IData" order="1" parid="value_type" uname="data" varid="OMV"/>
      <parameter iname="IData" order="0" parid="key_type" uname="data" varid="OMK"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit iRef="IMapperFetchValuesImpl" multiple="true" private="false" replica="0" uRef="mapper" visibleInterface="true">
      <super cRef="base" uRef="mapper"/>
      <visualDescription h="58" w="106" x="111" y="197"/>
    </unit>
    <unit iRef="IReducerFetchValuesImpl" multiple="true" private="false" replica="0" uRef="reducer" visibleInterface="true">
      <super cRef="base" uRef="reducer"/>
      <visualDescription h="52" w="102" x="477" y="185"/>
    </unit>
  </componentInfo>
</component:component>