<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="002400000480000094000000060200000024000052534131000400001100000073dec7f4258b7138ac345bdb3be8d35af5d1eea79526a82e126604faf5fb0256982aaf6ac52afab1af2671cb6f020706700951fddc9697ca533da07e16105fb7a924dcb17a0b5ed099ef0fa57f823402479ed5107eae4fd0156e4379e2ed4ff4d8e3aa8581c598b5e782f574af9638c65359499dba1d5292d25df72ffb5f82d7" isAbstract="false" kind="Computation" name="PathFlowReduceImpl" packagePath="br.ufc.mdcc.mapreduce.example.graph.sssp.fast.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="002400000480000094000000060200000024000052534131000400001100000027a26e2c9bc8c324a5bc4de3d3ede98f66562ca3da46dbf7bb8e4f213c5e2b978fd066a2213f7cb164af1e55a627c0ab04dcddbc67c17d1e660ae93d22424a8b59b040e363605042eb1035d98662dd32ee77da47b2f99010e6b80f68e3e91291abac62aedbd54f378e0c97a7a44c705646fc995be5e0bd9083cba16819537da8" localRef="base" location="br.ufc.mdcc.mapreduce.example.graph.sssp.fast.PathFlowReduce/PathFlowReduce.hpe" name="PathFlowReduce" package="br.ufc.mdcc.mapreduce.example.graph.sssp.fast" version="1.0.0.0">
        <visualDescription h="60" w="100" x="296" y="365">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009f0e4059bac90dbd773452b6ebbd798d7673d1cf0db03eb04b60b32098534b66525ece6ae96847b6a664f3d0a11033b983b98dbcf737dde8ae6cfbd8f09ba1ea62bf49d5da735b99512c0ba27fd2d2ee2ec11f6a143956f11bffba007421f7b46a10ee568ea7e23e0e62d2171f97f0efe4f5b4c9cf8eeb851ea528187c0bd382" localRef="output_value" location="br.ufc.mdcc.common.KVPair/KVPair.hpe" multiple="false" name="KVPair" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="123" x="162" y="76">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="value_type" varName="X###1276248487"/>
          <parameter formFieldId="key_type" varName="X###841654773"/>
          <unitBounds parallel="false" uRef="kv_pair">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009f0e4059bac90dbd773452b6ebbd798d7673d1cf0db03eb04b60b32098534b66525ece6ae96847b6a664f3d0a11033b983b98dbcf737dde8ae6cfbd8f09ba1ea62bf49d5da735b99512c0ba27fd2d2ee2ec11f6a143956f11bffba007421f7b46a10ee568ea7e23e0e62d2171f97f0efe4f5b4c9cf8eeb851ea528187c0bd382" localRef="input_values" location="br.ufc.mdcc.common.KVPair/KVPair.hpe" multiple="false" name="KVPair" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="100" x="94" y="443">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="value_type" varName="X###216987022"/>
          <parameter formFieldId="key_type" varName="OMK"/>
          <unitBounds parallel="false" uRef="kv_pair">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds parallel="false" uRef="reduce_function">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="IPathFlowReduceImpl" nArgs="0">
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.mapreduce.example.graph.sssp.fast.PathFlowReduce;&#xA;//using br.ufc.mdcc.mapreduce.example.graph.sssp.fast.DataPath;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.mapreduce.example.graph.sssp.fast.PathInfo;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.example.graph.sssp.fast.impl.PathFlowReduceImpl { &#xA;&#xA;&#x9;public abstract class BaseIPathFlowReduceImpl: Computation, BaseIPathFlowReduce{&#xA;&#xA;&#x9;&#x9;private IKVPair&lt;IInteger, IIterator&lt;IPathInfo>> input_values = null;&#xA;&#x9;&#x9;public IKVPair&lt;IInteger, IIterator&lt;IPathInfo>>  Input_values {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_values == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_values = (IKVPair&lt;IInteger, IIterator&lt;IPathInfo>> ) Services.getPort(&quot;input_values&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_values;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IKVPair&lt;IInteger, IIterator&lt;IPathInfo>> output_value = null;&#xA;&#x9;&#x9;public IKVPair&lt;IInteger, IIterator&lt;IPathInfo>> Output_value {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_value == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_value = (IKVPair&lt;IInteger, IIterator&lt;IPathInfo>>) Services.getPort(&quot;output_value&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_value;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="BaseIPathFlowReduceImpl.cs" srcType="base" uri="br.ufc.mdcc.mapreduce.example.graph.sssp.fast.impl.PathFlowReduceImpl/bin/1.0.0.0/BaseIPathFlowReduceImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.common.KVPair/bin/1.0.0.0/IKVPair.dll</dependency>
          <dependency>br.ufc.mdcc.common.Iterator/bin/1.0.0.0/IIterator.dll</dependency>
          <dependency>br.ufc.mdcc.common.String/bin/1.0.0.0/IString.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.graph.sssp.PathFlowReduce/bin/1.0.0.0/BaseIPathFlowReduce.dll</dependency>
        </file>
        <file contents="using System;&#xA;using System.Collections.Generic;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.mapreduce.example.graph.sssp.fast.PathFlowReduce;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.mapreduce.example.graph.sssp.fast.PathInfo;&#xA;using System.Diagnostics;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.example.graph.sssp.fast.impl.PathFlowReduceImpl { &#xA;&#xA;&#x9;public class IPathFlowReduceImpl : BaseIPathFlowReduceImpl, IPathFlowReduce&#xA;&#x9;{&#xA;&#x9;&#x9;IDictionary&lt;int,IDictionary&lt;int, int>> neighbours = new Dictionary&lt;int, IDictionary&lt;int,int>> ();&#xA;&#xA;&#x9;&#x9;public IPathFlowReduceImpl() { } &#xA;&#xA;&#x9;&#x9;#region IPathFlowReduce implementation&#xA;&#xA;&#x9;&#x9;public void clearNeighbours ()&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;neighbours.Clear ();&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;#endregion&#xA;&#xA;&#x9;&#x9;public override void main() &#xA;&#x9;&#x9;{ &#xA;&#x9;&#x9;&#x9;int di = int.MaxValue;&#xA;&#x9;&#x9;&#x9;int dmin = int.MaxValue;&#xA;&#x9;&#x9;&#x9;int done = 1;&#xA;&#xA;&#x9;&#x9;&#x9;Trace.WriteLine (Rank + &quot;: START REDUCE FUNCTION&quot;);&#xA;&#xA;&#x9;&#x9;&#x9;IKVPairInstance&lt;IInteger, IIterator&lt;IPathInfo>> input_instance = (IKVPairInstance&lt;IInteger, IIterator&lt;IPathInfo>>)Input_values.Instance;&#xA;&#x9;&#x9;&#x9;IIntegerInstance k = (IIntegerInstance)input_instance.Key;&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IPathInfo> v = (IIteratorInstance&lt;IPathInfo>)input_instance.Value;&#xA;&#xA;&#x9;&#x9;&#x9;int k_int = k.Value;&#xA;&#x9;&#x9;&#x9;if (!neighbours.ContainsKey (k_int))&#xA;&#x9;&#x9;&#x9;&#x9;neighbours [k_int] = new Dictionary&lt;int,int> ();&#xA;&#xA;&#x9;&#x9;&#x9;object o;&#xA;&#x9;&#x9;&#x9;while (v.fetch_next (out o)) &#xA;&#x9;&#x9;&#x9;{&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;IPathInfoInstance item = (IPathInfoInstance) o;&#xA;&#x9;&#x9;&#x9;&#x9;Info item_info = (Info) item.Value;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;Trace.WriteLine (Rank + &quot;: REDUCE FUNCTION LOOP &quot; + item_info);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;switch (item_info.info_type)&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;case Info.PATH_INFO_TYPE_DISTANCE_TRIAL:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DistanceInfo distance_item_info_1 = (DistanceInfo)item_info;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int tmp = distance_item_info_1.distance;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;dmin = (int) min (dmin, tmp);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;case Info.PATH_INFO_TYPE_DISTANCE_PARTIAL:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;DistanceInfo distance_item_info_2 = (DistanceInfo)item_info;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;di = distance_item_info_2.distance;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;case Info.PATH_INFO_TYPE_EDGE:&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;EdgeInfo edge_item_info = (EdgeInfo)item_info;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;IDictionary&lt;int, int> output_neibours = neighbours[k_int];&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int n = edge_item_info.vertex_other;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;int d = 0;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (!output_neibours.TryGetValue (n, out d))&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;output_neibours[n] = edge_item_info.weight;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;else &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;if (edge_item_info.weight &lt; d) &#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;output_neibours[n] = edge_item_info.weight;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;&#x9;break;&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;Trace.WriteLine (Rank + &quot;: REDUCE FUNCTION AFTER LOOP #1 &quot;);&#xA;&#xA;&#x9;&#x9;&#x9;IKVPairInstance&lt;IInteger, IIterator&lt;IPathInfo>> orv = (IKVPairInstance&lt;IInteger, IIterator&lt;IPathInfo>>) Output_value.newInstance();&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IPathInfo> buffer = (IIteratorInstance&lt;IPathInfo>) orv.Value;&#xA;&#xA;&#x9;&#x9;&#x9;Trace.WriteLine (Rank + &quot;: REDUCE FUNCTION OUT LOOP #2 &quot;);&#xA;&#xA;&#x9;&#x9;&#x9;//IPathInfo path_info = buffer.createItem();&#xA;&#xA;&#x9;&#x9;&#x9;dmin = (int) min (dmin,di);&#xA;&#x9;&#x9;&#x9;if(dmin != di)&#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;foreach (KeyValuePair&lt;int, int> kv in neighbours[k_int])&#xA;&#x9;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;//IPathInfoInstance path_info_instance = (IPathInfoInstance) path_info.newInstance ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;IPathInfoInstance path_info_instance = (IPathInfoInstance) &#x9;buffer.createItem ();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;DistanceInfo distance_info = new DistanceInfo();&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;distance_info.info_type = Info.PATH_INFO_TYPE_DISTANCE_TRIAL;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;distance_info.vertex = kv.Key;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;distance_info.distance = kv.Value + dmin;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;path_info_instance.Value = distance_info;&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;buffer.put (path_info_instance);&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;Trace.WriteLine (Rank + &quot;: REDUCE FUNCTION OTHER LOOP &quot; + distance_info);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;done = 0;&#xA;&#x9;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;&#x9;((IIntegerInstance)orv.Key).Value = done;&#xA;&#xA;&#xA;&#x9;&#x9;&#x9;IPathInfoInstance path_info_instance_2 = (IPathInfoInstance) buffer.createItem ();&#xA;&#x9;&#x9;&#x9;DistanceInfo distance_info_2 = new DistanceInfo();&#xA;&#x9;&#x9;&#x9;distance_info_2.info_type = Info.PATH_INFO_TYPE_DISTANCE_PARTIAL;&#xA;&#x9;&#x9;&#x9;distance_info_2.vertex = k.Value;&#xA;&#x9;&#x9;&#x9;distance_info_2.distance = dmin;&#xA;&#x9;&#x9;&#x9;path_info_instance_2.Value = distance_info_2;&#xA;&#x9;&#x9;&#x9;buffer.put (path_info_instance_2);&#xA;&#xA;&#x9;&#x9;&#x9;Trace.WriteLine (Rank + &quot;: REDUCE FUNCTION OTHER LOOP OUT &quot; + distance_info_2);&#xA;&#xA;&#x9;&#x9;&#x9;buffer.finish ();&#xA;&#xA;&#x9;&#x9;&#x9;Trace.WriteLine (Rank + &quot;: FINISH REDUCE FUNCTION&quot;);&#xA;&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;public int min (int d1, int d2)&#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;return d1 &lt; d2 ? d1 : d2;&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="IPathFlowReduceImpl.cs" srcType="user" uri="br.ufc.mdcc.mapreduce.example.graph.sssp.fast.impl.PathFlowReduceImpl/bin/1.0.0.0/IPathFlowReduceImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.mapreduce.example.graph.sssp.impl.PathFlowReduceImpl/bin/1.0.0.0/BaseIPathFlowReduceImpl.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.graph.sssp.PathFlowReduce/bin/1.0.0.0/IPathFlowReduce.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="141" x="152" y="137">
        <color b="0" g="255" r="0"/>
      </visualDescription>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit iRef="IPathFlowReduceImpl" multiple="false" private="false" replica="0" uRef="reduce_function" visibleInterface="true">
      <super cRef="base" uRef="reduce_function"/>
      <visualDescription h="40" w="141" x="183" y="228"/>
    </unit>
  </componentInfo>
</component:component>