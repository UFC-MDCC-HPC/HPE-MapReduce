<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="00240000048000009400000006020000002400005253413100040000110000007d10ff300bfe7ff95f933b362be6d42a424a4ee38942eb2fcb2c514ba49945a3463f21f2dd1724c567890528ecb8df3dca8fd98c326519f2ee20f3dd739511f8065b73f82c01f7f92353ad78775a302aeafde9a61703567952eb9d8e8e198b7b8ff44700dc2050868fe248526ea038ef550919de327d252c85010c9ccbc527a8" isAbstract="false" kind="Computation" name="BreakInLinesImpl" packagePath="br.ufc.mdcc.mapreduce.example.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000630a31ba9a3319a4c5fda32bca26e6ef0df03017f03ef56bb2424bf0e09353706fb20ca88e0bc0fd4c3deb480619a8ba934a02100bd73c75f8b29ca778a74fd2d1358cfd3ce43d628dd5e73e9f2cb17849aa9e913b3297845af5b6d11c62eb0aac68671c3194ddb8fbfa2866e9192397dc10500929864af691d8e87d21fca897" localRef="base" location="br.ufc.mdcc.mapreduce.example.BreakInLines/BreakInLines.hpe" name="BreakInLines" package="br.ufc.mdcc.mapreduce.example" version="1.0.0.0">
        <visualDescription h="60" w="100" x="239" y="196">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000e5873a44b23e0e36b62bd4462cf4f01fc4b03ce7b0922141e389cf2291aacd898d054a1e2147ce8c1c563b7a410cefef0e8d5b9b941643a09a5bdd0bd24eeeec082e8bd8fdf285fa51fe1c78d5351d970ba67e30fceb6575df115ce2b235b62d8fb560a1546371508d8a1aa133a213323d80aacd148883ae2fa6225f4d678cec" localRef="input_data" location="br.ufc.mdcc.common.String/String.hpe" multiple="false" name="String" package="br.ufc.mdcc.common" exposed="false">
          <visualDescription h="60" w="100" x="400" y="194">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="data">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a1d2d4f2ea9f962479f5322ab4d1b509fc8c95e67ad710c6bb2bc57522c8c96bb02c9f6dd000e20cf3098ef39cfffcb5af08f7fe86f5a1e1d0172e5578904f3160047cc21cbc9660df9c536444ce9e025fc3ca5bea6941da4aa0c6f38995d31933743052835857938e9f4726c55a065b54c9cd331a30361384b29cc34db7e285" localRef="output_data" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="false" name="Iterator" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="169" x="320" y="446">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="item_type" varName="X###1086685667"/>
          <unitBounds parallel="false" uRef="iterator">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds parallel="false" uRef="split_function">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <interface iRef="IBreakInLinesImpl" nArgs="0">
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Data;&#xA;using br.ufc.mdcc.mapreduce.example.BreakInLines;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.String;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.example.impl.BreakInLinesImpl { &#xA;&#xA;&#x9;public abstract class BaseIBreakInLinesImpl: Computation, BaseIBreakInLines&#xA;{&#xA;&#xA;private IIterator&lt;IKVPair&lt;IInteger,IString>> output_data = null;&#xA;&#xA;&#x9;public IIterator&lt;IKVPair&lt;IInteger,IString>> Output_data {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.output_data == null)&#xA;&#x9;&#x9;&#x9;&#x9;this.output_data = (IIterator&lt;IKVPair&lt;IInteger,IString>>) Services.getPort(&quot;output_data&quot;);&#xA;&#x9;&#x9;return this.output_data;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#x9;private IString input_data = null;&#xA;&#xA;&#x9;public IString Input_data {&#xA;&#x9;get {&#xA;&#x9;&#x9;if (this.input_data == null)&#xA;&#x9;&#x9;&#x9;&#x9;this.input_data = (IString) Services.getPort(&quot;input_data&quot;);&#xA;&#x9;&#x9;return this.input_data;&#xA;&#x9;}&#xA;}&#xA;&#xA;&#xA;&#xA;}&#xA;&#xA;}&#xA;" fileType="library" name="BaseIBreakInLinesImpl.cs" srcType="base" uri="br.ufc.mdcc.mapreduce.example.impl.BreakInLinesImpl/bin/1.0.0.0/BaseIBreakInLinesImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Iterator/bin/1.0.0.0/IIterator.dll</dependency>
          <dependency>br.ufc.mdcc.common.KVPair/bin/1.0.0.0/IKVPair.dll</dependency>
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.BreakInLines/bin/1.0.0.0/BaseISplitFunction.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
        <file contents="using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.mapreduce.example.BreakInLines;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.String;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.example.impl.BreakInLinesImpl { &#xA;&#xA;&#x9;public class IBreakInLinesImpl : BaseIBreakInLinesImpl, IBreakInLines&#xA;&#x9;{&#xA;&#xA;&#x9;&#x9;public IBreakInLinesImpl() { } &#xA;&#xA;&#x9;&#x9;public override void main() &#xA;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;//Console.WriteLine(WorldComm.Rank + &quot;: STARTING BREAK IN LINE  (SPLIT FUNCTION)&quot;);&#xA;&#x9;&#x9;&#x9;IStringInstance input_data_instance =  (IStringInstance) Input_data.Instance;&#xA;&#x9;&#x9;&#x9;IIteratorInstance&lt;IKVPair&lt;IInteger,IString>> output_data_instance = (IIteratorInstance&lt;IKVPair&lt;IInteger,IString>>) Output_data.Instance;&#xA;&#xA;&#x9;&#x9;&#x9;string s = input_data_instance.Value;&#xA;&#xA;&#x9;&#x9;&#x9;string[] lines = s.Split(new char[] {System.Environment.NewLine[0]});&#xA;&#x9;&#x9;&#x9;int line_counter = 0;&#xA;&#x9;&#x9;&#x9;foreach (string line in lines) &#xA;&#x9;&#x9;&#x9;{&#xA;&#x9;&#x9;&#x9;//&#x9;Console.WriteLine(WorldComm.Rank + &quot;: LINE = &quot; + line);&#xA;&#x9;&#x9;&#x9;&#x9;IKVPairInstance&lt;IInteger,IString> line_pair = (IKVPairInstance&lt;IInteger,IString>) Output_data.createItem() ;&#xA;&#x9;&#x9;&#x9;&#x9;((IIntegerInstance) line_pair.Key).Value = line_counter++;&#xA;&#x9;&#x9;&#x9;&#x9;((IStringInstance) line_pair.Value).Value = line;&#xA;&#x9;&#x9;&#x9;&#x9;output_data_instance.put(line_pair);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#xA;&#x9;&#x9;&#x9;output_data_instance.finish();&#xA;&#x9;&#x9;&#x9;//Console.WriteLine(WorldComm.Rank + &quot;: FINISH BREAK IN LINES !!!&quot;);&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;}&#xA;&#xA;}&#xA;" fileType="library" name="IBreakInLinesImpl.cs" srcType="user" uri="br.ufc.mdcc.mapreduce.example.impl.BreakInLinesImpl/bin/1.0.0.0/IBreakInLinesImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.mapreduce.example.impl.BreakInLinesImpl/bin/1.0.0.0/BaseIBreakInLinesImpl.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.BreakInLines/bin/1.0.0.0/ISplitFunction.dll</dependency>
          <externalDependency>MPI</externalDependency>
        </file>
      </sources>
      <visualDescription h="40" w="151" x="28" y="76">
        <color b="0" g="255" r="255"/>
      </visualDescription>
      <externalReferences>MPI</externalReferences>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit iRef="IBreakInLinesImpl" multiple="false" private="false" replica="0" uRef="split_function" visibleInterface="true">
      <super cRef="base" uRef="split_function"/>
      <visualDescription h="40" w="151" x="76" y="293"/>
    </unit>
  </componentInfo>
</component:component>