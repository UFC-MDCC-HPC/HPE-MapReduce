<?xml version="1.0" encoding="ASCII"?>
<component:component xmlns:component="http://www.example.org/HashComponent">
  <header hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000130c90af458c2b30a93133bb7da7f7d13eecc8b64a3a2c5a7e5a59a13a306acc04f146dedb84abad2a0073f8b8c203cc52c78fad486ae0f7184d47f5fdfb21ea91fd94a801701c7a5ba7ab32eb8ce725d3c1ce9ebc94537f85b771310ad9d6bf410121324b8990cb5a0cf6c628d54452c6679e5bbbf3042dc27e7949dfa4f387" isAbstract="false" kind="Computation" name="CliqueReduceImpl" packagePath="br.ufc.mdcc.mapreduce.example.graph.clique.impl">
    <baseType>
      <extensionType>
        <implements>true</implements>
      </extensionType>
      <component hash_component_UID="00240000048000009400000006020000002400005253413100040000110000007dacec7c168b46e9fa92e46244a75aac426de31d16a7577422bafadf3dafe1575e7203ee501ce6ac984a6c74afd6d897f29366d4b07773c4becaaa9fc0da1b05752f5bef608a2af6843c56d9afc21c8b8b369a2780c0f4891fc33b439e82d363b1e7bd58fbefd815821071406d09c7c2a56cfab06bfc0100eb4658e421cb1891" localRef="base" location="br.ufc.mdcc.mapreduce.example.graph.clique.CliqueReduce/CliqueReduce.hpe" name="CliqueReduce" package="br.ufc.mdcc.mapreduce.example.graph.clique" version="1.0.0.0">
        <visualDescription h="60" w="100" x="257" y="417">
          <color b="255" g="255" r="255"/>
        </visualDescription>
        <parameter formFieldId="input_key_type" varName="OMK"/>
        <parameter formFieldId="input_value_type" varName="OMV"/>
        <parameter formFieldId="output_type" varName="ORV"/>
        <port hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000372d83aaa123858a97a353cd956eea59b526f3524a0b69ca51d23c6b5e50c14721ee4166d87e7e9f451ee95352730aef34e9cb849e6b5ea13671a9b755f9613ba945240437226e4e67762b01435f8463578849f4af6d6de0f843be1f2709a38edbeeb542483818886b9fcbf40c442db2d79060d42dd605ee7983b06ebf973d85" localRef="output_value" location="br.ufc.mdcc.common.Data/Data.hpe" multiple="false" name="Data" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="130" x="462" y="393">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <unitBounds parallel="false" uRef="data">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <port hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009f0e4059bac90dbd773452b6ebbd798d7673d1cf0db03eb04b60b32098534b66525ece6ae96847b6a664f3d0a11033b983b98dbcf737dde8ae6cfbd8f09ba1ea62bf49d5da735b99512c0ba27fd2d2ee2ec11f6a143956f11bffba007421f7b46a10ee568ea7e23e0e62d2171f97f0efe4f5b4c9cf8eeb851ea528187c0bd382" localRef="input_values" location="br.ufc.mdcc.common.KVPair/KVPair.hpe" multiple="false" name="KVPair" package="br.ufc.mdcc.common" exposed="true">
          <visualDescription h="60" w="141" x="52" y="422">
            <color b="255" g="255" r="255"/>
          </visualDescription>
          <parameter formFieldId="value_type" varName="X###1398285065929"/>
          <parameter formFieldId="key_type" varName="OMK"/>
          <unitBounds parallel="false" uRef="kv_pair">
            <visualDescription h="20" w="20" x="5" y="2"/>
          </unitBounds>
        </port>
        <unitBounds parallel="false" uRef="clique_reduce">
          <visualDescription h="20" w="20" x="5" y="2"/>
        </unitBounds>
      </component>
    </baseType>
    <versions field1="1" field2="0" field3="0" field4="0"/>
    <visualAttributes>
      <color b="255" g="255" r="255"/>
    </visualAttributes>
  </header>
  <componentInfo>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000856221c6e60ff0c4ed3fb6226a0dc47e0d08669f122897225dc4c261dd9bb4e5e8186777ebd747933adb3ddaf3a101ed6b3c10b28685af9bcb3c307be4224d1e5eb317bb936f47a12b6d859bc89cddcf762cc79d16cc17b5d470bf6a55d2b5bf5859ada5b8af1a66163ebb01de4dbb395c11a7850b2e7a24726938565a56b589" localRef="input_key_type" location="br.ufc.mdcc.common.Integer/Integer.hpe" multiple="false" name="Integer" package="br.ufc.mdcc.common" parameter_id="input_key_type" exposed="false">
      <visualDescription h="60" w="171" x="88" y="84">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <unitBounds parallel="false" uRef="data">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a1d2d4f2ea9f962479f5322ab4d1b509fc8c95e67ad710c6bb2bc57522c8c96bb02c9f6dd000e20cf3098ef39cfffcb5af08f7fe86f5a1e1d0172e5578904f3160047cc21cbc9660df9c536444ce9e025fc3ca5bea6941da4aa0c6f38995d31933743052835857938e9f4726c55a065b54c9cd331a30361384b29cc34db7e285" localRef="omv_value_type" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="false" name="Iterator" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="177" x="437" y="135">
        <color b="203" g="192" r="255"/>
      </visualDescription>
      <parameter formFieldId="item_type" varName="OMK"/>
      <unitBounds parallel="false" uRef="iterator">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009f0e4059bac90dbd773452b6ebbd798d7673d1cf0db03eb04b60b32098534b66525ece6ae96847b6a664f3d0a11033b983b98dbcf737dde8ae6cfbd8f09ba1ea62bf49d5da735b99512c0ba27fd2d2ee2ec11f6a143956f11bffba007421f7b46a10ee568ea7e23e0e62d2171f97f0efe4f5b4c9cf8eeb851ea528187c0bd382" localRef="input_value_type" location="br.ufc.mdcc.common.KVPair/KVPair.hpe" multiple="false" name="KVPair" package="br.ufc.mdcc.common" parameter_id="input_value_type" exposed="false">
      <visualDescription h="60" w="205" x="369" y="176">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="value_type" varName="OMV"/>
      <parameter formFieldId="key_type" varName="OMK"/>
      <unitBounds parallel="false" uRef="kv_pair">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="00240000048000009400000006020000002400005253413100040000110000009f0e4059bac90dbd773452b6ebbd798d7673d1cf0db03eb04b60b32098534b66525ece6ae96847b6a664f3d0a11033b983b98dbcf737dde8ae6cfbd8f09ba1ea62bf49d5da735b99512c0ba27fd2d2ee2ec11f6a143956f11bffba007421f7b46a10ee568ea7e23e0e62d2171f97f0efe4f5b4c9cf8eeb851ea528187c0bd382" localRef="output_type" location="br.ufc.mdcc.common.KVPair/KVPair.hpe" multiple="false" name="KVPair" package="br.ufc.mdcc.common" parameter_id="output_type" exposed="false">
      <visualDescription h="60" w="142" x="328" y="131">
        <color b="255" g="255" r="255"/>
      </visualDescription>
      <parameter formFieldId="value_type" varName="IOMV"/>
      <parameter formFieldId="key_type" varName="OMK"/>
      <unitBounds parallel="false" uRef="kv_pair">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <innerComponent hash_component_UID="0024000004800000940000000602000000240000525341310004000011000000a1d2d4f2ea9f962479f5322ab4d1b509fc8c95e67ad710c6bb2bc57522c8c96bb02c9f6dd000e20cf3098ef39cfffcb5af08f7fe86f5a1e1d0172e5578904f3160047cc21cbc9660df9c536444ce9e025fc3ca5bea6941da4aa0c6f38995d31933743052835857938e9f4726c55a065b54c9cd331a30361384b29cc34db7e285" localRef="output_type_value_type" location="br.ufc.mdcc.common.Iterator/Iterator.hpe" multiple="false" name="Iterator" package="br.ufc.mdcc.common" exposed="false">
      <visualDescription h="60" w="245" x="361" y="182">
        <color b="203" g="192" r="255"/>
      </visualDescription>
      <parameter formFieldId="item_type" varName="OMV"/>
      <unitBounds parallel="false" uRef="iterator">
        <visualDescription h="20" w="20" x="5" y="2"/>
      </unitBounds>
    </innerComponent>
    <supplyParameter cRef="omv_value_type" varName="V"/>
    <supplyParameter cRef="output_type_value_type" varName="IOMV"/>
    <parameter componentRef="input_key_type" formFieldId="input_key_type" order="0" varName="OMK"/>
    <parameter componentRef="input_value_type" formFieldId="input_value_type" order="1" varName="OMV"/>
    <parameter componentRef="output_type" formFieldId="output_type" order="1" varName="ORV"/>
    <interface iRef="ICliqueReduceImpl" nArgs="1">
      <sources sourceType="C# Language" versionId="1.0.0.0">
        <file contents="/* Automatically Generated Code */&#xA;&#xA;using System;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.mapreduce.example.graph.clique.CliqueReduce;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.example.graph.clique.impl.CliqueReduceImpl { &#xA;&#x9;public abstract class BaseICliqueReduceImpl: Computation, BaseICliqueReduce{&#xA;&#xA;&#x9;&#x9;private IKVPair&lt;IInteger, IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>>> output_value = null;&#xA;&#x9;&#x9;public IKVPair&lt;IInteger, IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>>> Output_value {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.output_value == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.output_value = (IKVPair&lt;IInteger, IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>>>) Services.getPort(&quot;output_value&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.output_value;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#xA;&#x9;&#x9;private IKVPair&lt;IInteger,IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>>> input_values = null;&#xA;&#x9;&#x9;public IKVPair&lt;IInteger,IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>>> Input_values {&#xA;&#x9;&#x9;&#x9;get {&#xA;&#x9;&#x9;&#x9;&#x9;if (this.input_values == null)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;this.input_values = (IKVPair&lt;IInteger,IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>>> ) Services.getPort(&quot;input_values&quot;);&#xA;&#x9;&#x9;&#x9;&#x9;return this.input_values;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;//&lt;IInteger, IKVPair&lt;IInteger, IIterator&lt;IInteger>>, IKVPair&lt;IInteger, IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>>>>&#xA;//where OMK: IInteger&#xA;//where OMV: IKVPair&lt;IInteger, IIterator&lt;IInteger>>&#xA;//where ORV: IKVPair&lt;IInteger, IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>>>&#xA;&#xA;&#xA;&#xA;" fileType="library" name="BaseICliqueReduceImpl.cs" srcType="base" uri="br.ufc.mdcc.mapreduce.example.graph.clique.impl.CliqueReduceImpl/bin/1.0.0.0/BaseICliqueReduceImpl.dll" versionId="1.0.0.0">
          <dependency>br.ufc.mdcc.common.Data/bin/1.0.0.0/IData.dll</dependency>
          <dependency>br.ufc.mdcc.common.KVPair/bin/1.0.0.0/IKVPair.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.graph.clique.CliqueReduce/bin/1.0.0.0/BaseIReduceFunction.dll</dependency>
        </file>
        <file contents="using System;&#xA;using System.Collections.Generic;&#xA;using br.ufc.pargo.hpe.backend.DGAC;&#xA;using br.ufc.pargo.hpe.basic;&#xA;using br.ufc.pargo.hpe.kinds;&#xA;using br.ufc.mdcc.mapreduce.example.graph.clique.CliqueReduce;&#xA;using br.ufc.mdcc.common.Integer;&#xA;using br.ufc.mdcc.common.Iterator;&#xA;using br.ufc.mdcc.common.KVPair;&#xA;using br.ufc.mdcc.common.impl.IteratorImpl;&#xA;&#xA;namespace br.ufc.mdcc.mapreduce.example.graph.clique.impl.CliqueReduceImpl { &#xA;&#xA;&#x9;public class ICliqueReduceImpl: BaseICliqueReduceImpl, ICliqueReduce{&#xA;&#x9;&#x9;public ICliqueReduceImpl() { &#xA;&#xA;&#x9;&#x9;} &#xA;&#xA;&#x9;&#x9;private IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>> outputIteratorValues = null;&#xA;&#x9;&#x9;public override void main() { &#xA;&#x9;&#x9;&#x9;IInteger KEY = Input_values.Key;&#xA;&#x9;&#x9;&#x9;IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>> VALUES = Input_values.Value;&#xA;&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int, IInteger> P = new Dictionary&lt;int, IInteger>();&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int, IInteger> X = new Dictionary&lt;int, IInteger>();&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int, IIterator&lt;IInteger>> dicValues = pivotKEY(VALUES, KEY, P, X);&#xA;&#xA;&#x9;&#x9;&#x9;outputIteratorValues = new IIteratorImpl&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>>();&#xA;&#xA;&#x9;&#x9;&#x9;IIterator&lt;IInteger> R = new IIteratorImpl&lt;IInteger>();&#xA;&#x9;&#x9;&#x9;R.put(KEY);&#xA;&#xA;&#x9;&#x9;&#x9;bronKerboschAlgorithm(1, KEY, dicValues, P, R, X);&#xA;&#xA;&#x9;&#x9;&#x9;outputIteratorValues.finish();&#xA;&#x9;&#x9;&#x9;IKVPair&lt;IInteger, IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>>> KMV = new IKVPairImpl&lt;IInteger, IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>>> ();&#xA;&#x9;&#x9;&#x9;KMV.Key = KEY;&#xA;&#x9;&#x9;&#x9;KMV.Value = outputIteratorValues;&#xA;&#x9;&#x9;&#x9;if(!outputIteratorValues.HasFinished) outputOfReduce.put(KMV);&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private IDictionary&lt;int, IIterator&lt;IInteger>> pivotKEY(IIterator&lt;IKVPair&lt;IInteger, IIterator&lt;IInteger>>> iterator, IInteger pivot, IDictionary&lt;int, IInteger> P, IDictionary&lt;int, IInteger> X) {&#xA;&#x9;&#x9;&#x9;IDictionary&lt;int, IIterator&lt;IInteger>> res = new Dictionary&lt;int, IIterator&lt;IInteger>>();&#xA;&#x9;&#x9;&#x9;for (; !iterator.HasFinished; ) {&#xA;&#x9;&#x9;&#x9;&#x9;IKVPair&lt;IInteger, IIterator&lt;IInteger>> kv = iterator.fetch_next();&#xA;&#x9;&#x9;&#x9;&#x9;if (pivot.Value &lt; kv.Key.Value)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;P.Add(kv.Key.Value, kv.Key);&#xA;&#x9;&#x9;&#x9;&#x9;if (pivot.Value > kv.Key.Value)&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;X.Add(kv.Key.Value, kv.Key);&#xA;&#x9;&#x9;&#x9;&#x9;res [kv.Key.Value] = kv.Value;&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;return res;&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;public void bronKerboschAlgorithm(int SIZE, IInteger pivot, IDictionary&lt;int, IIterator&lt;IInteger>> dicValues, IDictionary&lt;int, IInteger> P, IIterator&lt;IInteger> R, IDictionary&lt;int, IInteger> X) {&#xA;&#x9;&#x9;&#x9;if (P.Count == 0 &amp;&amp; X.Count == 0) {&#xA;&#x9;&#x9;&#x9;&#x9;IInteger key = new IIntegerImpl();&#xA;&#x9;&#x9;&#x9;&#x9;key.Value = SIZE;&#xA;&#x9;&#x9;&#x9;&#x9;R.finish();&#xA;&#x9;&#x9;&#x9;&#x9;IKVPair&lt;IInteger, IIterator&lt;IInteger>> kv = new IKVPairImpl&lt;IInteger, IIterator&lt;IInteger>>();&#xA;&#x9;&#x9;&#x9;&#x9;kv.Key = key;&#xA;&#x9;&#x9;&#x9;&#x9;kv.Value = R;&#xA;&#x9;&#x9;&#x9;&#x9;outputIteratorValues.put (kv);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;while (P.Count>0){&#xA;&#x9;&#x9;&#x9;&#x9;IEnumerator&lt;IInteger> iteratorPValues = P.Values.GetEnumerator();&#xA;&#x9;&#x9;&#x9;&#x9;iteratorPValues.MoveNext();&#xA;&#x9;&#x9;&#x9;&#x9;IInteger v = iteratorPValues.Current;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;IDictionary&lt;int, IInteger> p = new Dictionary&lt;int, IInteger>();&#xA;&#x9;&#x9;&#x9;&#x9;IDictionary&lt;int, IInteger> x = new Dictionary&lt;int, IInteger>();&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;IIterator&lt;IInteger> r = (IIterator&lt;IInteger>)R.clone();&#xA;&#x9;&#x9;&#x9;&#x9;r.put(v);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;int recursiveSIZE = SIZE + 1;&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;IIterator&lt;IInteger> value = dicValues [v.Value];&#xA;&#x9;&#x9;&#x9;&#x9;intersect(value, P, X, ref p, ref x);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;bronKerboschAlgorithm(recursiveSIZE, pivot, dicValues, p, r, x);&#xA;&#xA;&#x9;&#x9;&#x9;&#x9;P.Remove(v.Value);&#xA;&#x9;&#x9;&#x9;&#x9;X.Add(v.Value, v);&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;&#x9;private void intersect(IIterator&lt;IInteger> neighbors, IDictionary&lt;int, IInteger> P, IDictionary&lt;int, IInteger> X, ref IDictionary&lt;int, IInteger> p, ref IDictionary&lt;int, IInteger> x) {&#xA;&#x9;&#x9;&#x9;IIterator&lt;IInteger> iterator = (IIterator&lt;IInteger>)neighbors.clone(); //reset iterator&#xA;&#x9;&#x9;&#x9;for (; !iterator.HasFinished; ) {&#xA;&#x9;&#x9;&#x9;&#x9;IInteger n = iterator.fetch_next();&#xA;&#x9;&#x9;&#x9;&#x9;if (P.ContainsKey(n.Value)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;p.Add(n.Value, n);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;&#x9;if (X.ContainsKey(n.Value)){&#xA;&#x9;&#x9;&#x9;&#x9;&#x9;x.Add(n.Value, n);&#xA;&#x9;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;&#x9;}&#xA;&#x9;&#x9;}&#xA;&#x9;}&#xA;}&#xA;" fileType="library" name="ICliqueReduceImpl.cs" srcType="user" uri="br.ufc.mdcc.mapreduce.example.graph.clique.impl.CliqueReduceImpl/bin/1.0.0.0/ICliqueReduceImpl.dll" versionId="1.0.0.0">
          <dependency>%WORKSPACE/br.ufc.mdcc.mapreduce.example.graph.clique.impl.CliqueReduceImpl/bin/1.0.0.0/BaseICliqueReduceImpl.dll</dependency>
          <dependency>br.ufc.mdcc.mapreduce.example.graph.clique.CliqueReduce/bin/1.0.0.0/IReduceFunction.dll</dependency>
        </file>
      </sources>
      <visualDescription h="40" w="141" x="118" y="151">
        <color b="0" g="255" r="0"/>
      </visualDescription>
      <parameter iname="IKVPair" order="0" parid="output_type" uname="kv_pair" varid="ORV"/>
      <action id="main">
        <protocol/>
      </action>
    </interface>
    <unit iRef="ICliqueReduceImpl" multiple="false" private="false" replica="0" uRef="clique_reduce" visibleInterface="true">
      <super cRef="base" uRef="clique_reduce"/>
      <visualDescription h="40" w="141" x="191" y="284"/>
    </unit>
  </componentInfo>
</component:component>